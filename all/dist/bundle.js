/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./main/script.js":
/*!************************!*\
  !*** ./main/script.js ***!
  \************************/
/***/ (() => {

eval("/////////////////////////////////////////////////////////// MENU\n\nlet bar = document.querySelector('.bar');\nlet fullMenu = document.querySelector('.full-menu');\nlet fullClose = document.querySelector('.full-close');\n\nbar.addEventListener('click', function(){\n  fullMenu.classList.add(\"tog-menu\");\n})\nfullClose.addEventListener('click', function(){\n  fullMenu.classList.remove(\"tog-menu\");\n})\n\n\nconst disclaimer = document.querySelector('#disclaimer');\ndisclaimer.addEventListener('click', function () {\n  const app = document.querySelector('#app');\n  app.innerHTML =\n    `<div class=\"app\">\n            <div class=\"disclaimer\">\n                <div class=\"x\">\n                    <span class=\"hamburger\"><img class=\"close\" src=\"/all/main/img/hamburger.svg\"></span>\n                </div>\n                <div class=\"y\">\n                    <p class=\"disk\">Мы - опытная команда профессионалов, стоящая за MCN.</p>\n                    <p class=\"disc-txt\">MCN - это криптовалюта, разработанная нашей компанией, \"Бирик Туран\", Это цифровой актив, который предназначен для облегчения процессов платежей, инвестиций и обмена внутри нашей экосистемы MCN - базируется на передовых технологиях блокчейн, обеспечивая безопасность и прозрачность транзакций.</p>\n                    <p class=\"disc-txt\">Наша монета предоставляет удобные решения для пользователей, позволяя им использовать криптовалюту в различных аспектах своей повседневной жизни, включая оплату товаров и услуг, участие в наших проектах и взаимодействие с нашими партнерами по всему миру.</p>\n                </div>\n                <div class=\"y\">\n                  <p class=\"disk\">We are an experienced team of professionals behind MCN.</p>\n                  <p class=\"disc-txt\">MCN is a cryptocurrency developed by our company, \"Birik Turan\". It is a digital asset designed to facilitate payment processes, investments, and exchanges within our MCN ecosystem. MCN is based on advanced blockchain technologies, ensuring the security and transparency of transactions.</p>\n                  <p class=\"disc-txt\">Our coin provides convenient solutions for users, allowing them to use cryptocurrency in various aspects of their daily lives, including payment for goods and services, participation in our projects, and interaction with our partners around the world.</p>\n              </div>\n            </div>\n        </div>`;\n\n  let close = document.querySelector('.hamburger');\n  close.addEventListener('click', function () {\n    app.innerHTML = '';\n  });\n});\n\nfunction actionToggle() {\n  const language = document.querySelector('.language');\n  language.classList.toggle('active')\n}\n////////////////////////////////////////////////////////////\n\n///////////////////////Видео\ndocument.addEventListener('DOMContentLoaded', function() {\n  var video = document.querySelector('.video');\n\n  // Отключаем звук\n  video.muted = true;\n\n  // Функция для перезапуска видео\n  function restartVideo() {\n      video.currentTime = 0; // Устанавливаем время в начало видео\n      video.play(); // Запускаем видео\n  }\n\n  // Слушаем событие 'ended', чтобы перезапустить видео при его завершении\n  video.addEventListener('ended', restartVideo);\n\n  // Запускаем воспроизведение видео\n  video.play();\n});\n\n////////////////////////////// TABS\nconst tabs = document.querySelector(\".wrap\");\nconst tabButton = document.querySelectorAll(\".tab-button\");\nconst contents = document.querySelectorAll(\".content\");\n\ntabs.onclick = e => {\n  const id = e.target.dataset.id;\n  if (id) {\n    tabButton.forEach(btn => {\n      btn.classList.remove(\"toggle\");\n    });\n    e.target.classList.add(\"toggle\");\n\n    contents.forEach(content => {\n      content.classList.remove(\"toggle\");\n    });\n    const element = document.getElementById(id);\n    element.classList.add(\"toggle\");\n  }\n}\n\n\n//////////////////////////////\n\nconst projects = document.querySelectorAll(\".project\");\n\nprojects.forEach(project => {\n  const slides = project.querySelectorAll(\".item\");\n  const buttons = project.querySelectorAll(\".item-button\");\n\n  let current = 0;\n\n  buttons.forEach((button, index) => {\n    button.addEventListener(\"click\", () => {\n      index == 0 ? gotoPrev() : gotoNext();\n    });\n  });\n\n  const gotoPrev = () => {\n    current > 0 ? gotoNum(current - 1) : gotoNum(slides.length - 1);\n  };\n\n  const gotoNext = () => {\n    current < slides.length - 1 ? gotoNum(current + 1) : gotoNum(0);\n  };\n\n  const gotoNum = number => {\n    current = number;\n    for (let i = 0; i < slides.length; i++) {\n      slides[i].classList.remove(\"slider\");\n      slides[i].classList.remove(\"next\");\n    }\n    slides[current].classList.add(\"slider\");\n    slides[(current + 1) % slides.length].classList.add(\"next\");\n  };\n});\n\n\n///////////////// ANIMATION\nconst startAnimation = (entries, observer) => {\n  entries.forEach(entry => {\n    entry.target.classList.toggle(\"slide-in-from-right\", entry.isIntersecting);\n  });\n};\n\nconst startAnimation1 = (entries1, observer1) => {\n  entries1.forEach(entry1 => {\n    entry1.target.classList.toggle(\"slide-in-from-left\", entry1.isIntersecting);\n  });\n};\n\nconst observer = new IntersectionObserver(startAnimation);\nconst observer1 = new IntersectionObserver(startAnimation1);\nconst options = { root: null, rootMargin: '0px', threshold: 1 }; \n\nconst zagalovok = document.querySelectorAll('.zagalovok');\nconst zagalovok1 = document.querySelectorAll('.zagalovok1');\nconst buttonWrap = document.querySelectorAll('.buttonWrap');\nconst tog = document.querySelectorAll('.tog');\nconst frame = document.querySelectorAll('.frame');\nconst frame1 = document.querySelectorAll('.frame1');\nconst projectTxt = document.querySelectorAll('.project-txt');\nconst accarBlock = document.querySelectorAll('.accar-block');\nconst accarTxt = document.querySelectorAll('.accar-txt');\n\nzagalovok.forEach(el => {\n  observer.observe(el, options);\n});\n\nzagalovok1.forEach(el => {\n  observer.observe(el, options);\n});\n\nbuttonWrap.forEach(el => {\n  observer.observe(el, options);\n});\n\ntog.forEach(el => {\n  observer1.observe(el, options);\n});\n\nframe.forEach(el => {\n  observer.observe(el, options);\n});\n\nframe1.forEach(el => {\n  observer1.observe(el, options);\n});\n\nprojectTxt.forEach(el => {\n  observer.observe(el, options);\n});\n\naccarBlock.forEach(el => {\n  observer1.observe(el, options);\n});\n\naccarTxt.forEach(el => {\n  observer.observe(el, options);\n});\n\n////////////////////////////////////\n\ndocument.querySelectorAll('.accar').forEach((item) => {\n  item.addEventListener('click', (e) => {\n   let accardionItem = e.target.closest('.accardion-panel');\n   let accardionContent = accardionItem.querySelector('.accardion-bottom');\n   accardionContent.classList.toggle('accardion-bottom-active');\n  });\n });\n\n ////////////////////////////////////\n\n//  const path = require('path');\n\n//  module.exports = {\n//    entry: '.all/main/script.js',\n//    output: {\n//      filename: 'bundle.js',\n//      path: path.resolve(__dirname, 'dist'),\n//    },\n//    mode: 'development' // Укажите режим сборки, например, 'development' или 'production'\n//  };\n \n\n//# sourceURL=webpack:///./main/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./main/script.js"]();
/******/ 	
/******/ })()
;